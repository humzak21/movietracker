name: Deploy to cPanel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Only run on direct pushes to main OR when a PR is merged to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build React application
      run: npm run build
      
    - name: Prepare deployment files
      run: |
        echo "Preparing deployment files..."
        
        # Create deployment directory
        rm -rf deployment
        mkdir -p deployment
        
        # Copy built files from dist
        cp -r dist/* deployment/
        
        # Copy API files
        cp -r api deployment/
        
        # Copy configuration files
        cp .htaccess deployment/
        
        # Copy router.php if it exists
        if [ -f "router.php" ]; then
          cp router.php deployment/
        fi
        
        # Copy CSV files if they exist
        find . -maxdepth 1 -name "*.csv" -exec cp {} deployment/ \;
        
        # Create config.php from secrets
        cat > deployment/api/config.php << EOF
        <?php
        // TMDB API Configuration
        define('TMDB_API_KEY', '${{ secrets.TMDB_API_KEY }}');
        define('TMDB_BASE_URL', 'https://api.themoviedb.org/3');
        
        // CORS settings
        header('Access-Control-Allow-Origin: *');
        header('Access-Control-Allow-Methods: GET, POST, OPTIONS');
        header('Access-Control-Allow-Headers: Content-Type');
        
        // Handle preflight requests
        if (\$_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
            http_response_code(200);
            exit();
        }
        ?>
        EOF
        
        echo "Deployment files prepared"
        
    - name: Create deployment archive
      run: |
        cd deployment
        tar -czf ../deployment.tar.gz .
        cd ..
        echo "Created deployment archive"
        
    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.CPANEL_FTP_SERVER }}
        username: ${{ secrets.CPANEL_FTP_USERNAME }}
        password: ${{ secrets.CPANEL_FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.CPANEL_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.env*
          **/deployment.tar.gz
        
    - name: Verify deployment
      run: |
        echo "Deployment completed!"
        echo ""
        echo "Deployed files:"
        echo "- React application (built from dist/)"
        echo "- API proxy (api/)"
        echo "- Configuration files (.htaccess, router.php)"
        echo "- Movie data (CSV files)"
        echo "- API configuration (with TMDB key from secrets)"
        echo ""
        echo "Next steps:"
        echo "1. Visit your website to test the deployment"
        echo "2. Open browser console and run: window.debugTMDB()"
        echo "3. Check for any errors in the browser console"
        echo ""
        echo "If you encounter issues:"
        echo "- Verify file permissions (PHP files: 644, directories: 755)"
        echo "- Check that TMDB_API_KEY secret is properly set"
        echo "- Ensure cPanel FTP credentials are correct"
        
    - name: Cleanup
      run: |
        rm -rf deployment
        rm -f deployment.tar.gz
        echo "Cleaned up temporary files"